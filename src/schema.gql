# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageMetaInput {
  page: Int!
  take: Int!
  itemCount: Int!
  pageCount: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type Comfort {
  """Id autoincrementado para la PK"""
  id: ID!

  """Nombre de la comodidad"""
  name: String!

  """Descripción de la comodidad"""
  description: String!

  """Estado de la comodidad"""
  status: Boolean!

  """Email del usuario que registra"""
  userCreateAt: String!

  """Fecha de Registro"""
  createDateAt: DateTime!

  """Email del usuario que actualiza"""
  userUpdateAt: String!

  """Fecha de Actuaización"""
  updateDateAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ComfortPaginationResponse {
  data: [Comfort!]!
  meta: PageMetaInput!
}

type Category {
  """Id autoincrementado para la PK"""
  id: ID!

  """Nombre de la categoría"""
  name: String!

  """Descripción de la categoría"""
  description: String!

  """Temática de la categoría"""
  theme: String!

  """Estado de la categoría"""
  status: Boolean!

  """Cantidad de Reservaciones - Popularidad"""
  populate: Int!

  """Email del usuario que registra"""
  userCreateAt: String!

  """Fecha de Registro"""
  createDateAt: DateTime!

  """Email del usuario que actualiza"""
  userUpdateAt: String!

  """Fecha de Actuaización"""
  updateDateAt: DateTime!
}

type CategoryPaginationResponse {
  data: [Category!]!
  meta: PageMetaInput!
}

type User {
  """Id autoincrementado para la PK"""
  id: ID!

  """Nombres del usuario"""
  names: String!

  """Apellidos del usuario"""
  lastnames: String!

  """Email del usuario"""
  email: String!

  """Email validado del usuario"""
  emailValidated: Boolean!

  """Roles del usuario"""
  roles: [String!]!

  """Sexo del usuario"""
  gender: String!

  """Avatar del usuario"""
  img: String

  """Teléfono 1 del usuario"""
  phone1: String

  """Teléfono 2 del usuario"""
  phone2: String

  """Estado del usuario"""
  isBlock: Boolean!

  """Email de usuario que bloqueó"""
  userWhoBlock: String!
}

type UserPaginationResponse {
  data: [User!]!
  meta: PageMetaInput!
}

type AuthResponse {
  user: User!
  token: String!
}

type Query {
  """Método inicial para las configuraciones GraphQL"""
  hello: String!

  """Generación de número aleatorio"""
  randomNumber: Float!

  """Retornar el arreglo de valores pares a partir de un número dado"""
  generateArrayPairs(value: Int): [Int!]!

  """Listar comodidades con paginación y filtro"""
  comforts(pageOptionsArgs: PageOptionsArgs!): ComfortPaginationResponse!

  """Obtener comodidad por ID"""
  comfort(id: Int!): Comfort!

  """Listar categorías con paginación y filtro"""
  categories(pageOptionsArgs: PageOptionsArgs!): CategoryPaginationResponse!

  """Obtener categoría por ID"""
  category(id: Int!): Category!
  users(pageOptionsArgs: PageOptionsArgs!): UserPaginationResponse!
  revalidate: AuthResponse!
}

input PageOptionsArgs {
  order: String! = "asc"
  page: Int! = 1
  take: Int! = 10
  search: String! = ""
}

type Mutation {
  """Crear una nueva comodidad"""
  createComfort(createComfortInput: CreateComfortInput!): Comfort!

  """Actualizar una comodidad"""
  updateComfort(updateComfortInput: UpdateComfortInput!): Comfort!

  """Eliminar lógicamente una comodidad"""
  removeComfort(id: Int!): Comfort!

  """Crear una nueva categoría"""
  createCategory(createCategoryInput: CreateCategoryInput!): Category!

  """Actualizar una categoría"""
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!

  """Eliminar lógicamente una categoría"""
  removeCategory(id: Int!): Category!
  blockUser(id: Int!): User!
  signup(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
}

input CreateComfortInput {
  name: String!
  description: String!
  status: Boolean
  userCreateAt: String
  createDateAt: DateTime
  userUpdateAt: String
  updateDateAt: DateTime
}

input UpdateComfortInput {
  name: String
  description: String
  status: Boolean
  userCreateAt: String
  createDateAt: DateTime
  userUpdateAt: String
  updateDateAt: DateTime
  id: Int!
}

input CreateCategoryInput {
  name: String!
  description: String!
  theme: String!
  status: Boolean
  populate: Int
  userCreateAt: String
  createDateAt: DateTime
  userUpdateAt: String
  updateDateAt: DateTime
}

input UpdateCategoryInput {
  name: String
  description: String
  theme: String
  status: Boolean
  populate: Int
  userCreateAt: String
  createDateAt: DateTime
  userUpdateAt: String
  updateDateAt: DateTime
  id: Int!
}

input SignupInput {
  names: String!
  lastnames: String!
  email: String!
  password: String!
  passwordConfirm: String!
  gender: String!
  img: String
  phone1: String
  phone2: String
  isBlock: Boolean
}

input LoginInput {
  email: String!
  password: String!
}