// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Dejemoslo comentado para que las consultas sean m√°s directas
// enum ETheme {
//   Presidencial
//   Romantica
//   Caribe
//   Suite
//   Familiar
//   Estandar
// }

model TBL_CATEGORIES {
  id                          Int                           @id @default(autoincrement())
  name                        String                        @unique @db.VarChar(150)
  description                 String                        @unique @db.VarChar(5000)
  theme                       String?
  status                      Boolean                       @default(true)
  populate                    Int                           @default(0)
  userCreateAt                String?
  createDateAt                DateTime?
  userUpdateAt                String?
  updateDateAt                DateTime?
  TBL_ROOMS                   TBL_ROOMS[]
  TBL_DTL_COMFORTS_CATEGORIES TBL_DTL_COMFORTS_CATEGORIES[]
  TBL_DTL_IMAGES_CATEGORIES   TBL_DTL_IMAGES_CATEGORIES[]
}

model TBL_COMFORTS {
  id                          Int                           @id @default(autoincrement())
  name                        String                        @unique @db.VarChar(150)
  description                 String                        @unique @db.VarChar(500)
  status                      Boolean                       @default(true)
  userCreateAt                String?
  createDateAt                DateTime?
  userUpdateAt                String?
  updateDateAt                DateTime?
  TBL_DTL_COMFORTS_CATEGORIES TBL_DTL_COMFORTS_CATEGORIES[]
}

model TBL_USERS {
  id               Int                @id @default(autoincrement())
  names            String             @db.VarChar(150)
  lastnames        String             @db.VarChar(150)
  email            String             @unique @db.VarChar(150)
  emailValidated   Boolean            @default(false)
  password         String             @db.VarChar(100)
  roles            String[]           @default(["USER"])
  gender           String             @db.VarChar(1)
  img              String?            @default("default.png")
  phone1           String?
  phone2           String?
  isBlock          Boolean            @default(false)
  userWhoBlock     String?
  passwordRecovery String?
  TBL_RESERVATIONS TBL_RESERVATIONS[]
}

model TBL_ROOMS {
  id           Int       @id @default(autoincrement())
  name         String    @unique @db.VarChar(25)
  maintenance  Boolean   @default(false)
  description  String?   @db.VarChar(5000)
  status       Boolean   @default(true)
  userCreateAt String?
  createDateAt DateTime?
  userUpdateAt String?
  updateDateAt DateTime?

  category         TBL_CATEGORIES     @relation(fields: [categoryId], references: [id])
  categoryId       Int
  TBL_RESERVATIONS TBL_RESERVATIONS[]
}

model TBL_DTL_COMFORTS_CATEGORIES {
  id           Int            @id @default(autoincrement())
  userCreateAt String?
  createDateAt DateTime?
  category     TBL_CATEGORIES @relation(fields: [categoryId], references: [id])
  categoryId   Int
  comfort      TBL_COMFORTS   @relation(fields: [comfortId], references: [id])
  comfortId    Int
}

model TBL_DTL_IMAGES_CATEGORIES {
  id           Int            @id @default(autoincrement())
  url          String
  userCreateAt String?
  createDateAt DateTime?
  category     TBL_CATEGORIES @relation(fields: [categoryId], references: [id])
  categoryId   Int
}

model TBL_PLANS {
  id               Int                @id @default(autoincrement())
  type             String             @unique @db.VarChar(40)
  urlImage         String?            @default("default.png")
  description      String?            @unique @db.VarChar(1000)
  highSeasonPrice  Float
  LowSeasonPrice   Float
  status           Boolean            @default(true)
  userCreateAt     String?
  createDateAt     DateTime?
  userUpdateAt     String?
  updateDateAt     DateTime?
  TBL_RESERVATIONS TBL_RESERVATIONS[]
}

model TBL_RESERVATIONS {
  id                     Int       @id @default(autoincrement())
  reservationCode        String    @unique @db.VarChar(50)
  valueReservation       Float
  transactionNumber      String?   @default("Pendiente") @db.VarChar(250)
  orderTransaction       String?   @default("Pendiente") @db.VarChar(250)
  typeTransaction        String?   @default("Pendiente") @db.VarChar(250)
  paymentMethod          String?   @default("Pendiente") @db.VarChar(250)
  descriptionReservation String    @db.VarChar(1000)
  initialDate            DateTime
  endDate                DateTime
  daysNumber             Int
  statusTransaction      String
  dateTransactionFinal   DateTime?
  userCreateAt           String?
  createDateAt           DateTime?
  userUpdateAt           String?
  updateDateAt           DateTime?

  room   TBL_ROOMS @relation(fields: [roomId], references: [id])
  roomId Int

  user   TBL_USERS @relation(fields: [userId], references: [id])
  userId Int

  plan   TBL_PLANS @relation(fields: [planId], references: [id])
  planId Int
}
